[{"authors":["arun_kp"],"categories":null,"content":"Imagine a scenario where main memory is non-volatile and stores data even if we shutdown the system. The persistent nature of the upcoming memory technologies (NVM) does the same that opened up new research questions like:\n How can a programmer take advantage of persistence? What would happen if the system crashes in the middle and the data stored in the main memory is inconsistent?  I am looking into application agnostic mechanisms that bring back the system in the same state where it was left off and performance implications of such mechanisms in the non-volatile memory system.\nHere are some relevant readings:\n Fine-Grain Checkpointing with In-Cache-Line Logging: Link Mnemosyne: Lightweight persistent memory: Link Rewind: Recovery write-ahead system for in-memory non-volatile data-structures: Link Memory Persistency: Link SSP: Eliminating redundant writes in failure-atomic NVRAMs via shadow sub-paging: Link  ","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"665271745c09b74e2fc9537fe430f3ef","permalink":"https://car3s.github.io/authors/arun_kp/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/arun_kp/","section":"authors","summary":"Imagine a scenario where main memory is non-volatile and stores data even if we shutdown the system. The persistent nature of the upcoming memory technologies (NVM) does the same that opened up new research questions like:","tags":null,"title":"Arun","type":"authors"},{"authors":["anuj"],"categories":null,"content":"After being habituated to ask WHY and HOW ‘n\u0026rsquo; number of times from my early education in Odisha, I have always fascinated for research! And, for finding answers to some of my WHYs on my own, I joined IIT Hyderabad as a Ph.D. student in 2018.\nI am in the 3rd year of my Ph.D. in the dept of CSE at IITH, researching in the area of micro-architectural hardware security of Deep Learning.\n","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"67c402eee8e3fb3f0e83f2ba2101c017","permalink":"https://car3s.github.io/authors/bhargav/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/bhargav/","section":"authors","summary":"After being habituated to ask WHY and HOW ‘n\u0026rsquo; number of times from my early education in Odisha, I have always fascinated for research! And, for finding answers to some of my WHYs on my own, I joined IIT Hyderabad as a Ph.","tags":null,"title":"Bhargav","type":"authors"},{"authors":["anuj"],"categories":null,"content":"Imagine you go to a restaurant for dinner, and there are these excellent chefs who already know what you want to eat and waiters that serve you without any wait. Pretty neat, huh? But wait, what happens when there are multiple customers ordering at the same time? Keep in mind that, aside from regular orders, waiters also serve what a customer might like to have in the future. Since only one kitchen is available and there are just a few waiters, only a limited number of orders can be served at a given time. Thus, it becomes difficult to serve all the customers equally. It may happen that the customers who have already ordered are waiting while the ones who just got here have tables piled up with food they don\u0026rsquo;t want to eat (at least not right now or ever).\nBoring story, what does it have to do with caches and microarchitecture? The idea of serving food from the kitchen to the customer tables can be loosely related to fetching instruction/data from the DRAM to the private caches. Thus, it is likely that similar problems of unfairness will occur when we apply prefetching in many-core systems. I am trying to understand how SOTA prefetchers behave in a many-core environment, what are the areas of bottleneck and find out areas of improvement.\nI am also studying cache side-channel attacks and their detection mechanisms to provide mitigation techniques.\nRelevant readings for the interested folks:\n Path Confidence based Lookahead Prefetching: Link Increasing multicore system efficiency through intelligent bandwidth shifting: Link Cache-timing based attacks: Prime+Probe Link, Flush+Reload Link Cyclone: Detecting Contention-Based Cache Information Leaks Through Cyclic Interference: Link  ","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"9f1d08cd2694a21cb5f34244d0357b4c","permalink":"https://car3s.github.io/authors/anuj/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/anuj/","section":"authors","summary":"Imagine you go to a restaurant for dinner, and there are these excellent chefs who already know what you want to eat and waiters that serve you without any wait. Pretty neat, huh?","tags":null,"title":"Anuj","type":"authors"},{"authors":["saurabh_kumar"],"categories":null,"content":"In today’s world, smartphones and smart applications are ubiquitous. However, did we ever wonder how safe is our data, and do we really trust these third party applications, which we use on a day-to-day basis? These applications provide useful services, but they can potentially send sensitive information to remote servers for various known and unknown malicious purposes.\nMy research revolves around providing a detailed system level Android Application Analysis Framework, that can detect flaws related to end user security and privacy.\nHere are some relevant readings:\n Drebin: Effective and Explainable Detectionof Android Malware in Your Pocket: Link TaintART: A Practical Multi-level Information-Flow TrackingSystem for Android RunTime: Link NDroid: Towards Tracking Information Flows Across Multiple Android Contexts: Link Evading Android Runtime Analysis via Sandbox Detection: Link You Shouldn’t Collect My Secrets: Thwarting Sensitive Keystroke Leakage in Mobile IME Apps: Link Free for All! Assessing User Data Exposure toAdvertising Libraries on Android: Link What mobile ads know about mobile users: Link  ","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"7842af2210ca6a8ac3e03df8cd4a7a87","permalink":"https://car3s.github.io/authors/saurabh_kumar/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/saurabh_kumar/","section":"authors","summary":"In today’s world, smartphones and smart applications are ubiquitous. However, did we ever wonder how safe is our data, and do we really trust these third party applications, which we use on a day-to-day basis?","tags":null,"title":"Saurabh","type":"authors"},{"authors":["neelu"],"categories":null,"content":"Wouldn\u0026rsquo;t it be great if you could always get a hit in the L1 cache? The processor would never have to wait for longer than the L1 latency for any data. Think about how much increase that would bring to the CPU utilization. But, alas, we live in the real world where the L1 hit rate is not perfect and time and again the processor does get stalled when data requests are served at the latency of the outer level caches; and bless the soul of the instruction that suffers a miss in all the levels of the cache and has to go to the memory to get the required data. What a disaster. This problem is termed as \u0026ldquo;The Memory Wall Problem\u0026rdquo; in the world of Computer Architecture.\nWhat\u0026rsquo;s my role in all this?\nThe gap between the performance provided by the state-of-the-art L1 prefetchers and the performance of an ideal L1 (with a 100% hit-rate) is still significant. I am studying state-of-the-art L1 prefetchers to understand their limitations, find the potential for improvement and then push their limits to bridge that gap.\nIf all this sounds interesting to you, you can check out some of the reading material on state-of-the-art data prefetchers:\n Bouquet of Instruction Pointers: Instruction Pointer Classifier-based Hardware Prefetching: Link Bingo Spatial Data Prefetcher: Link Path Confidence based Lookahead Prefetching: Link Criticality Aware Tiered Cache Hierarchy: Link  ","date":1590045584,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1590045584,"objectID":"3b5c9cc9999f45131338f76b0e454e8d","permalink":"https://car3s.github.io/authors/neelu/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/neelu/","section":"authors","summary":"Wouldn\u0026rsquo;t it be great if you could always get a hit in the L1 cache? The processor would never have to wait for longer than the L1 latency for any data.","tags":null,"title":"Neelu","type":"authors"},{"authors":["sujeet"],"categories":null,"content":"Computer architects are working on improving system performance for decades. But, these techniques for performance improvements have opened ways to leak confidential information of applications. The well-known examples for these are the famous Spectre ad Meltdown attacks. In recent years, researchers proposed many more similar attacks as a result of which micro-architectural security has become an emerging area of research in academia and industry.\nThese side-channel attacks target micro-architectural units like the Last Level Cache (LLC). But it is not always an effective attack that leaks security-sensitive information with considerable accuracy. One of the reasons for this low accuracy is attack strategy. The way to bring these micro-architectural units in a particular state for the attack is known as an attack strategy. I feel there is a scope for improvement in attack strategy. I study these attacks and their strategies to make them more effective. This study may even lead to gaining insights that will help in introducing more impactful attack strategies.\nMany researchers have already proposed several techniques to mitigate these attacks. However, these techniques either incur a considerable performance penalty, or they are not practical at all. I am working on mitigation techniques that ensure security but with minimal performance overhead possible.\nReferences Side-Channel Attacks\n Spectre Attacks: Exploiting Speculative Execution: Link Meltdown: Reading Kernel Memory from User Space: Link  Attack Strategies\n Rowhammer.js: A Remote Software-Induced Fault Attack in JavaScript: Link ARMageddon: Cache Attacks on Mobile Devices: Link  Mitigation Techniques\n New Attacks and Defense for Encrypted-Address Cache: Link Secure Hierarchy-Aware Cache Replacement Policy (SHARP): Link  ","date":1564818560,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1564818560,"objectID":"ed0babd498d99eec4237300e113703bc","permalink":"https://car3s.github.io/authors/sujeet/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/sujeet/","section":"authors","summary":"Computer architects are working on improving system performance for decades. But, these techniques for performance improvements have opened ways to leak confidential information of applications. The well-known examples for these are the famous Spectre ad Meltdown attacks.","tags":null,"title":"Sujeet","type":"authors"},{"authors":["vasudha"],"categories":null,"content":"Emerging applications compute on huge datasets that are much larger than the DRAM size. Such applications also exhibit poor data and code locality and their reuse distance is such that the required page translations get evicted from the TLBs by the time they\u0026rsquo;re requested again. Now, bear in mind that TLB misses are expensive as they require a full five-level page table walk resulting in five DRAM accesses just for the virtual to physical address translation, in the worst case. We\u0026rsquo;re talking about hundreds and thousands of cycles during which the CPU does nothing. The situation worsens in case of virtualization with extended page tables as now both, the guest and the host page tables, need to be traversed to complete a virtual to physical address translation. Superpages are used to reduce this overhead as this increases the coverage of the TLBs, however, they do impose several challenges on the operating system.\nI am working on designing a prefetcher for TLBs which can learn the TLB access patterns and prefetch the translations ahead in time so that when they\u0026rsquo;re requested, they will hit at the TLB and the processor will get to continue with its computations without getting stalled.\nIf you want to know more about this, you can go through the following readings:\n  SEESAW - Using Superpages to Improve VIPT Caches: Link\n  Prefetched Address Translation: Link\n  CSALT - Context Switch Aware Large TLB: Link\n  Tempo - Translation Triggered Prefetching: Link\n  ","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"d6c8e1b1240789d5a20f45ce715a07d2","permalink":"https://car3s.github.io/authors/vasudha/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/vasudha/","section":"authors","summary":"Emerging applications compute on huge datasets that are much larger than the DRAM size. Such applications also exhibit poor data and code locality and their reuse distance is such that the required page translations get evicted from the TLBs by the time they\u0026rsquo;re requested again.","tags":null,"title":"Vasudha","type":"authors"},{"authors":["yashika"],"categories":null,"content":"When researchers were busy securing the \u0026ldquo;Software\u0026rdquo;, attackers started targeting the \u0026ldquo;micro-architecture\u0026rdquo; to leak information.\nThe word \u0026ldquo;micro-architecture\u0026rdquo; here points to various units that are present on the processor chip or the off-chip units. A modern processor chip contains multiple micro-architecture units like caches, buffers, predictors, etc. These units are transparent to the programmer (i.e. the programmer does not realize their existence) but apply a lot of enhancements to improve the system\u0026rsquo;s performance.\nMost of the time it is the enhancements in these micro-architecture units that are exploited to leak information.\nIn the complete hierarchy from a processor\u0026rsquo;s core until the DRAM, multiple units are vulnerable to micro-architectural attacks due to enhancements. Now that the researchers have acknowledged this attack possibilities, they are either coming up with different security solutions like Intel \u0026lsquo;s SGX, ARM\u0026rsquo;s Trustzone, etc. or revisiting the processor\u0026rsquo;s architecture from the scratch to put in different security essentials to develop a secure processor like MI6, IRONHIDE, etc. But these solutions are significantly slower than the present performance trend and are not application-agnostic.\nMy role: I am exploring the area of these on-chip, off-chip elements to find a balance between their two different quotients i.e. performance and security.\nIf you are interested to read further, below are few links to refer to:\n SANCTUM: Link MI6: Link IRONHIDE: Link  ","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"6d7af84e2935c629805fe8f1f788a5f8","permalink":"https://car3s.github.io/authors/yashika/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/yashika/","section":"authors","summary":"When researchers were busy securing the \u0026ldquo;Software\u0026rdquo;, attackers started targeting the \u0026ldquo;micro-architecture\u0026rdquo; to leak information.\nThe word \u0026ldquo;micro-architecture\u0026rdquo; here points to various units that are present on the processor chip or the off-chip units.","tags":null,"title":"Yashika","type":"authors"},{"authors":["vishal"],"categories":null,"content":"Today\u0026rsquo;s web and server applications are getting increasingly complex with the rich set of features they provide and this leads to their code footprint reaching a few gigabytes in size. This is due to increasingly complex use-cases and a lot of layers of abstractions like dynamic link libraries, system calls, object-oriented programming. This increase in the code footprint increases the L1 instruction cache miss rate, which stalls the CPU for 40% of the execution time.\nPrefetching is a technique to bring the memory data into the cache ahead of its use. State of the art instruction prefetchers have been proposed to tackle this problem. However, compared to an L1 instruction cache of size 32KB, these prefetchers require 200-300KB of storage overhead to provide good performance. My work is to reduce this storage overhead and make instruction prefetchers practical to implement in real hardware.\nYou can find more information about instruction prefetchers here:\n Proactive Instruction Fetch: Link RDIP: return-address-stack directed instruction prefetching: Link Temporal instruction fetch streaming: Link  ","date":1590045584,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1590045584,"objectID":"51689c9dd0f9a0f9b33cd68d628d73f3","permalink":"https://car3s.github.io/authors/vishal/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/vishal/","section":"authors","summary":"Today\u0026rsquo;s web and server applications are getting increasingly complex with the rich set of features they provide and this leads to their code footprint reaching a few gigabytes in size. This is due to increasingly complex use-cases and a lot of layers of abstractions like dynamic link libraries, system calls, object-oriented programming.","tags":null,"title":"Vishal","type":"authors"},{"authors":["dixit"],"categories":null,"content":"Qualcomm Research, India.\n","date":1564818560,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1564818560,"objectID":"2789ca487489d6068c1596e6f9656b36","permalink":"https://car3s.github.io/authors/dixit/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/dixit/","section":"authors","summary":"Qualcomm Research, India.","tags":null,"title":"Dixit","type":"authors"},{"authors":["kuldeep"],"categories":null,"content":"Caches play an important role in improving system performance. However, recently caches have become one of the main sources of information leakage. Various attack methodology have been implemented in recent years which are, PRIME + PROBE, FLUSH + RELOAD, FLUSH + FLUSH and many more. They exploit the cache weakness and make the attack possible to execute.\nCaches are also subjected to attacks where cached values are returned faster than uncached values, so an attacker can use response time to gain information about requests that other clients are making.\nAs a counter-measure to cache attacks, many software-based defences have been implemented, given their appealing portability and scalability guarantees. There are hardware-based defences also which were used in recent years.\nGoal: I am trying to make the existing attacks more robust and improve its effectiveness.\n\u0026ldquo;ONE SINGLE VULNERABILITY IS ALL AN ATTACKER NEEDS”. I am finding that cloying vulnerability.\nInterested reading to start with :\n  Flush + Reload: Link\n  Cache template attacks: Link\n  Cache last level attacks are practical based on Prime + Probe: Link\n  Flush + Flush: Link\n  ","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"6836a811b959df96a5d36bc99370f6a8","permalink":"https://car3s.github.io/authors/kuldeep/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/kuldeep/","section":"authors","summary":"Caches play an important role in improving system performance. However, recently caches have become one of the main sources of information leakage. Various attack methodology have been implemented in recent years which are, PRIME + PROBE, FLUSH + RELOAD, FLUSH + FLUSH and many more.","tags":null,"title":"Kuldeep","type":"authors"},{"authors":["nilesh"],"categories":null,"content":"For every instruction/data fetch, virtual to physical address translation is required. And if it misses in TLB, it has to access main memory N number of times which is equal to the level of page table and this is even worse when we are running our application in VM.\nI am exploring in the area to reduce the latency overhead for the conversion of the virtual to physical address.\n","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"e41cf46a87e8d54a4069e17f4d624ee6","permalink":"https://car3s.github.io/authors/nilesh/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/nilesh/","section":"authors","summary":"For every instruction/data fetch, virtual to physical address translation is required. And if it misses in TLB, it has to access main memory N number of times which is equal to the level of page table and this is even worse when we are running our application in VM.","tags":null,"title":"Nilesh","type":"authors"},{"authors":["mriganka"],"categories":null,"content":"Hi there. My interest largely lies in working with Oblivious RAMs(ORAMs). What is ORAM? Thanks for asking. Imagine you are cooking your mom a surprise dish. But, all your ingredients are kept in her room in boxed containers.\nObserving how often you pick certain boxes, more often than some other boxes, your mom can roughly guess what dish you are up to, cause she has been a pretty good cook herself.\nHad your mom\u0026rsquo;s room been an ORAM, you would be able to pick these boxes in such a way, that you can indeed surprise your mom, by not letting her guess anything useful.\nCurrently I am trying to learn more about the use of ORAMs in Enclaves.\nWhat is an enclave? Imagine an exam room where students are writing their exams, and there is no invigilator. The topper of the class is afraid that his evil classmates would copy his answers or hypnotise him so that he forgets all what he studied. If the exam room is an enclave, our topper can peacefully write his exam, without having to fear his fellow evil classmates.\nI am trying to push towards defending page-fault based side channel attacks on enclaves.\nSome interesting reading on the topic would be:\n  Path ORAM: Link\n  Write-Only ORAM: Link 1, Link 2, Link 3\n  Got lost in Sanctum? Refer to Intel SGX: Link\n  Understanding page Fault based side channels: Link\n  ","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"9cc12679d335f12d829e27766eab299d","permalink":"https://car3s.github.io/authors/mriganka/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/mriganka/","section":"authors","summary":"Hi there. My interest largely lies in working with Oblivious RAMs(ORAMs). What is ORAM? Thanks for asking. Imagine you are cooking your mom a surprise dish. But, all your ingredients are kept in her room in boxed containers.","tags":null,"title":"Mriganka","type":"authors"},{"authors":["pratik"],"categories":null,"content":"A number of side channel attacks are exploiting the feature of last level caches, which is set-associative, inclusive and is shared among all the cores to efficiently utilize the cache space. Unfortunately, such sharing makes the cache vulnerable to attacks like prime-probe, in which an adversary can infer the access pattern of a co-running application by carefully monitoring evictions using cache conflicts.One of the solutions can be the randomization of the mapping of the memory line to cache set.\nI am working on making these randomizations more secure.\nIf you are interested in this,you can go through following:\n Last-Level Cache Side-Channel Attacks are Practical : Link CEASER: Mitigating Conflict-Based Cache Attacks via Encrypted-Address and Remapping: Link SCATTER CACHE : Thwarting Cache Attacks via Cache Set Randomization: Link  ","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"82fcd1ca80c548f7b20d6f61d7afed78","permalink":"https://car3s.github.io/authors/pratik/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/pratik/","section":"authors","summary":"A number of side channel attacks are exploiting the feature of last level caches, which is set-associative, inclusive and is shared among all the cores to efficiently utilize the cache space.","tags":null,"title":"Pratik","type":"authors"},{"authors":["rahul"],"categories":null,"content":"Our programs run on the abstraction of vast virtual memory which it can access without any worry of the actual physical implementation. The underlying complex system of memory management works as an well oiled machine to keep this illusion going.\nVirtual memory comes at a cost, translation of the virtual address into physical address. TLB\u0026rsquo;s try to reduce the latency of address translation.\nVirtualization further increases the complexity and latency, program sees virtual memory of guest OS which in turn sees the virtual memory of host OS. Accelerators such as GPU, DSP, etc. share virtual address space with CPU. They also require address translation.\nThese challenges make the modern virtual memory implementation an interesting research problem. I am looking into techniques to decrease address translation latency.\n","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"3b86a286746506c90648349bae74fb18","permalink":"https://car3s.github.io/authors/rahul/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/rahul/","section":"authors","summary":"Our programs run on the abstraction of vast virtual memory which it can access without any worry of the actual physical implementation. The underlying complex system of memory management works as an well oiled machine to keep this illusion going.","tags":null,"title":"Rahul","type":"authors"},{"authors":["upasana"],"categories":null,"content":"SAP Labs, India.\n","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"759df8e0c02a7587978392842daca876","permalink":"https://car3s.github.io/authors/upasana/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/upasana/","section":"authors","summary":"SAP Labs, India.","tags":null,"title":"Upasana","type":"authors"},{"authors":["anish"],"categories":null,"content":"I aim to design secure computer architectures by exposing and resolving hardware vulnerabilities. This does not discount the performance gains achieved by the community throughout the years. Performance and security must be on par with each other. I have worked to devise software-based microarchitectural attacks and I currently focus on both defensive architectural security and performance-oriented memory hierarchy.\nI am presently working as an Architecture Research Intern at Processor Architecture Research Lab at Intel Labs. We are exploring and enhancing the cache hierarchy.\nMy Focus at CAR3S I am working on a project sponsored by Qualcomm Research to propose compression algorithms in hardware for data flowing through the cache hierarchy in heterogenous SoC based on ARM architecture.\nDABANGG Attacks The academia has put considerable focus to devise microarchitectural side-channel attacks in the past decade. They are powerful, hard-to-mitigate, and jeopardise the confidentiality and integrity of the system, especially when used in transient-execution attacks. Yet, the focus of the industry to resolve the fundamental issues highlighted by side-channel attacks has been thin. The Flush+Reload attack, for example, forms the profiling tool used to mount the Spectre attack. Several mitigations have been proposed and implemented to resolve Spectre (and Meltdown), but side-channel attacks have been, well, sidelined by the industry. The biggest reason for this is the fact that side-channel attacks are difficult to mount and prone to inaccuracies.\nWe determine the reason for inaccuracies in representative flush-based attacks. We then propose refinements on the attack vectors to produce robust, noise-resilient attacks which are accurate. We evaluate our attacks in a number of different experiments with systematic noise variation. The Refinements we propose over existing attacks are termed as DABANGG optimizations. This work is supported by NXP Semiconductors through SRC.\nRelevant Readings In-case you wish to learn more about the exciting field of offensive security, do go through the following:\n  Cache-timing based attacks: Prime+Probe ( Link), Flush+Reload ( Link), and Flush+Flush ( Link)\n  Transient Execution Attacks (TEAs): Meltdown \u0026amp; Spectre ( Link), and A comprehensive evalution of various TEAs ( Link)\n  Fault-based attacks: CLKscrew ( Link) and Plundervolt ( Link)\n  ","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"6c42b79de5e5fed1a4ff05e61c55c7ae","permalink":"https://car3s.github.io/authors/anish/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/anish/","section":"authors","summary":"I aim to design secure computer architectures by exposing and resolving hardware vulnerabilities. This does not discount the performance gains achieved by the community throughout the years. Performance and security must be on par with each other.","tags":null,"title":"Anish","type":"authors"},{"authors":["nilay"],"categories":null,"content":"I have worked on improving a state-of-the-art instruction pointer based data prefetcher called IPCP and making it practical to implement in real systems. The prefetcher can now give IPC improvement comparable to the best prefetcher out there using only a fraction of the harware resources.\nCurrently I am working on a project aimed at studying memory access patterns of android applications and implementing suitable cache compression algorithms for the same.\n","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"1bcdbd2e076f9268b93ba1dbdb8767b2","permalink":"https://car3s.github.io/authors/nilay/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/nilay/","section":"authors","summary":"I have worked on improving a state-of-the-art instruction pointer based data prefetcher called IPCP and making it practical to implement in real systems. The prefetcher can now give IPC improvement comparable to the best prefetcher out there using only a fraction of the harware resources.","tags":null,"title":"Nilay","type":"authors"},{"authors":["tarun"],"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"59f0882ae07a336150317b98ad937ea3","permalink":"https://car3s.github.io/authors/tarun/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/tarun/","section":"authors","summary":"","tags":null,"title":"Tarun","type":"authors"},{"authors":["admin"],"categories":null,"content":"CAR3S Group: Computer Architecture for Resilient, Secure, and Scalable Systems\n Find out more about our research interests. We have a reading group where we discuss/ debate recent or classic papers on Computer Architecture, Operating Systems, and Arch/OS Security. We call it CAOS.\nWe use Slack whenever we are in not in the chaos mode.\n","date":1594809141,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1594809141,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"https://car3s.github.io/authors/admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/admin/","section":"authors","summary":"CAR3S Group: Computer Architecture for Resilient, Secure, and Scalable Systems\n Find out more about our research interests. We have a reading group where we discuss/ debate recent or classic papers on Computer Architecture, Operating Systems, and Arch/OS Security.","tags":null,"title":"CAR3S Group","type":"authors"},{"authors":["aditya"],"categories":null,"content":"M.S. by Research at Georgia Tech University, USA.\n","date":1594451984,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1594451984,"objectID":"435e9dbc4a1886a657895a5c2a8ff56b","permalink":"https://car3s.github.io/authors/aditya/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/aditya/","section":"authors","summary":"M.S. by Research at Georgia Tech University, USA.","tags":null,"title":"Aditya","type":"authors"},{"authors":["biswa"],"categories":null,"content":"       *Courtsey: PhD Comics\n","date":1594451984,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1594451984,"objectID":"4bcf6d9bf6b1a108f9c6d6e988a0c63f","permalink":"https://car3s.github.io/authors/biswa/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/biswa/","section":"authors","summary":"*Courtsey: PhD Comics","tags":null,"title":"Biswa","type":"authors"},{"authors":["samuel"],"categories":null,"content":"Intel, Bengaluru.\n","date":1585063404,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1585063404,"objectID":"c0b58ee0cb59fefd52b1283d9f3b41db","permalink":"https://car3s.github.io/authors/samuel/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/samuel/","section":"authors","summary":"Intel, Bengaluru.","tags":null,"title":"Samuel","type":"authors"},{"authors":["sudhanshu"],"categories":null,"content":"Ph.D. at U. Rochester, USA.\n","date":1567532388,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1567532388,"objectID":"a4c3c618004357f4351cf15e63ad1df3","permalink":"https://car3s.github.io/authors/sudhanshu/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/sudhanshu/","section":"authors","summary":"Ph.D. at U. Rochester, USA.","tags":null,"title":"Sudhanshu","type":"authors"},{"authors":["deba"],"categories":null,"content":"External research collaborator.\n","date":1561292469,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1561292469,"objectID":"531af82d9dee8bde8ca3ad8331fe11b1","permalink":"https://car3s.github.io/authors/deba/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/deba/","section":"authors","summary":"External research collaborator.","tags":null,"title":"Debadatta Mishra","type":"authors"},{"authors":["nayan"],"categories":null,"content":"Samsung Electronics, South Korea.\n","date":1561292469,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1561292469,"objectID":"788b7cd0b7b18fdb99c14ef76575a2d4","permalink":"https://car3s.github.io/authors/nayan/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/nayan/","section":"authors","summary":"Samsung Electronics, South Korea.","tags":null,"title":"Nayan","type":"authors"},{"authors":["santhosh"],"categories":null,"content":"External research collaborator.\n","date":1561292469,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1561292469,"objectID":"124422c2d8b2b5eb2b748545cfe13d2b","permalink":"https://car3s.github.io/authors/santhosh/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/santhosh/","section":"authors","summary":"External research collaborator.","tags":null,"title":"Santhosh Kumar T","type":"authors"},{"authors":["arpit"],"categories":null,"content":"External research collaborator.\n","date":1554898879,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1554898879,"objectID":"51f3a18dd1f6867c37de9a4c5e118a30","permalink":"https://car3s.github.io/authors/arpit/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/arpit/","section":"authors","summary":"External research collaborator.","tags":null,"title":"Arpit Gupta","type":"authors"},{"authors":["hrithvik"],"categories":null,"content":"External research collaborator.\n","date":1554898879,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1554898879,"objectID":"26640dea25c82c68eb72df67985b45a1","permalink":"https://car3s.github.io/authors/hrithvik/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/hrithvik/","section":"authors","summary":"External research collaborator.","tags":null,"title":"Hrithvik Taneja","type":"authors"},{"authors":["parv"],"categories":null,"content":"External research collaborator.\n","date":1554898879,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1554898879,"objectID":"fd788b6239e100dfe01f7c34eb02f1b4","permalink":"https://car3s.github.io/authors/parv/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/parv/","section":"authors","summary":"External research collaborator.","tags":null,"title":"Parv Mor","type":"authors"},{"authors":["snehil"],"categories":null,"content":"Apple, USA.\n","date":1530466731,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1530466731,"objectID":"ea2ae8ea7428c9c704c4311f411896da","permalink":"https://car3s.github.io/authors/snehil/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/snehil/","section":"authors","summary":"Apple, USA.","tags":null,"title":"Snehil","type":"authors"},{"authors":["mainak"],"categories":null,"content":"External research collaborator.\n","date":1522741937,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1522741937,"objectID":"537488536793a52ad0fc03809b103816","permalink":"https://car3s.github.io/authors/mainak/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/mainak/","section":"authors","summary":"External research collaborator.","tags":null,"title":"Mainak Chaudhuri","type":"authors"},{"authors":["prakhar_ag"],"categories":null,"content":"Tower Research, India.\n","date":1522741937,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1522741937,"objectID":"a1a3381dca0e379aa0e493ea6000ede3","permalink":"https://car3s.github.io/authors/parkhar_ag/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/parkhar_ag/","section":"authors","summary":"Tower Research, India.","tags":null,"title":"Prakhar Agarwal","type":"authors"},{"authors":["prakhar"],"categories":null,"content":"Intel, Bengaluru.\n","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"8fa178b968cd5937089cc1a6da9ca3bf","permalink":"https://car3s.github.io/authors/prakhar/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/prakhar/","section":"authors","summary":"Intel, Bengaluru.","tags":null,"title":"Prakhar","type":"authors"},{"authors":null,"categories":null,"content":" 1 / 10  2 / 10  3 / 10  4 / 10  5 / 10  6 / 10  7 / 10  8 / 10  9 / 10  10 / 10  \u0026#10094; \u0026#10095; --            --  var slideIndex = 0; showSlides(); function showSlides() { var i; var slides = document.getElementsByClassName(\"mySlides\"); for (i = 0; i slides.length) {slideIndex = 1} slides[slideIndex-1].style.display = \"block\"; setTimeout(showSlides, 4000); // Change image every 2 seconds }  ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"665288c8761d48eb3366c37954243edc","permalink":"https://car3s.github.io/gallery/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/gallery/","section":"","summary":"1 / 10  2 / 10  3 / 10  4 / 10  5 / 10  6 / 10  7 / 10  8 / 10  9 / 10  10 / 10  \u0026#10094; \u0026#10095; --            --  var slideIndex = 0; showSlides(); function showSlides() { var i; var slides = document.","tags":null,"title":"Gallery","type":"page"},{"authors":["CAR3S Group"],"categories":[],"content":"  DABANGG Attack is live!  Tarun and Mriganka joined CAR3S. Welcome!  Vishal, Neelu, and Biswa\u0026lsquo;s work, Run-Jump-Run accepted at First Instruction Prefetching Championship Workshop, co-located with 47th ISCA Conference, 2020. Unrestricted research gift from Qualcomm Technologies for research on \u0026ldquo;efficient memory subsystems for mobile computing platforms\u0026rdquo;.  Aditya and Biswa\u0026rsquo;s work on Reverse Engineering the Stream Prefetcher accepted at SILM Workshop at 5th EuroS\u0026amp;P Conference, 2020.  ","date":1594809141,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1594809141,"objectID":"e8e98bc36fd7ef5f5a22303342fb27c6","permalink":"https://car3s.github.io/post/jul_20/","publishdate":"2020-07-15T16:02:21+05:30","relpermalink":"/post/jul_20/","section":"post","summary":"DABANGG Attack is live!  Tarun and Mriganka joined CAR3S. Welcome!  Vishal, Neelu, and Biswa\u0026lsquo;s work, Run-Jump-Run accepted at First Instruction Prefetching Championship Workshop, co-located with 47th ISCA Conference, 2020.","tags":["Group News"],"title":"July, 2020 update","type":"post"},{"authors":["Aditya","Biswa"],"categories":[],"content":"","date":1594451984,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1594451984,"objectID":"ca8294e031780a13d3eaa55f747d1014","permalink":"https://car3s.github.io/publication/eurosnp_2020/","publishdate":"2020-07-11T12:49:44+05:30","relpermalink":"/publication/eurosnp_2020/","section":"publication","summary":"","tags":["Prefetchers","Security"],"title":"Reverse Engineering the Stream Prefetcher for Profit","type":"publication"},{"authors":["Vishal","Neelu","Biswa"],"categories":[],"content":"","date":1590045584,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1590045584,"objectID":"8c04228a814f2f975459f445ca3a1e29","permalink":"https://car3s.github.io/publication/ipc1_isca2020/","publishdate":"2020-05-21T12:49:44+05:30","relpermalink":"/publication/ipc1_isca2020/","section":"publication","summary":"","tags":["Prefetchers"],"title":"Run-Jump-Run: Bouquet of Instruction Pointer Jumpers for High Performance Instruction Prefetching","type":"publication"},{"authors":["Samuel","Biswa"],"categories":[],"content":"","date":1585063404,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1585063404,"objectID":"0dccc72d5e299570a6db9349ceea60e3","permalink":"https://car3s.github.io/publication/isca2020/","publishdate":"2020-03-24T20:53:24+05:30","relpermalink":"/publication/isca2020/","section":"publication","summary":"","tags":["Prefetchers"],"title":"Bouquet of Instruction Pointers: Instruction Pointer Classifier-based Spatial Hardware Prefetching","type":"publication"},{"authors":["CAR3S Group"],"categories":[],"content":"  Bouquet of Prefetchers accepted at ISCA Conference, 2020.  Rahul, Nilesh, Kuldeep, and Pratik joined the group. Welcome!  ","date":1584268341,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1584268341,"objectID":"f8f886ef05ea3968e3115f4e627ce78b","permalink":"https://car3s.github.io/post/mar_20/","publishdate":"2020-03-15T16:02:21+05:30","relpermalink":"/post/mar_20/","section":"post","summary":"  Bouquet of Prefetchers accepted at ISCA Conference, 2020.  Rahul, Nilesh, Kuldeep, and Pratik joined the group. Welcome!  ","tags":["Group News"],"title":"March, 2020 update","type":"post"},{"authors":null,"categories":null,"content":"","date":1583193600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1583193600,"objectID":"c61bd17da54e6598c71ab43046ec8671","permalink":"https://car3s.github.io/alumni/","publishdate":"2020-03-03T00:00:00Z","relpermalink":"/alumni/","section":"","summary":"Meet our Past Members","tags":null,"title":"Alumni","type":"widget_page"},{"authors":null,"categories":null,"content":"","date":1583193600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1583193600,"objectID":"14ee683c4b38c2d729a72d6fc8a7d1f7","permalink":"https://car3s.github.io/blogs/","publishdate":"2020-03-03T00:00:00Z","relpermalink":"/blogs/","section":"","summary":"Content from Pit Crew Members","tags":null,"title":"Blogs","type":"widget_page"},{"authors":null,"categories":null,"content":"","date":1583193600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1583193600,"objectID":"c1d17ff2b20dca0ad6653a3161942b64","permalink":"https://car3s.github.io/people/","publishdate":"2020-03-03T00:00:00Z","relpermalink":"/people/","section":"","summary":"Meet the team","tags":null,"title":"Pit Crew Members","type":"widget_page"},{"authors":null,"categories":null,"content":"","date":1583193600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1583193600,"objectID":"14692b9285e47610ed5ceef94a219725","permalink":"https://car3s.github.io/research_at_car3s/","publishdate":"2020-03-03T00:00:00Z","relpermalink":"/research_at_car3s/","section":"","summary":"","tags":null,"title":"Research at CAR3S Group","type":"widget_page"},{"authors":["CAR3S Group"],"categories":[],"content":"   Neelu, Anuj, Vasudha and Yashika have joined CARS. Welcome!\n   Sujeet has converted from M.S. to Ph.D. Congrats!\n   Vishal got shortlisted for a summer research internship at EPFL, Switzerland. Many congrats!\n  ","date":1577961141,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577961141,"objectID":"44df0717806b52de73c9e1c8a08c0074","permalink":"https://car3s.github.io/post/nov_dec_19/","publishdate":"2020-01-02T16:02:21+05:30","relpermalink":"/post/nov_dec_19/","section":"post","summary":"Neelu, Anuj, Vasudha and Yashika have joined CARS. Welcome!\n   Sujeet has converted from M.S. to Ph.D. Congrats!\n   Vishal got shortlisted for a summer research internship at EPFL, Switzerland.","tags":["Group News"],"title":"November \u0026 December, 2019 update","type":"post"},{"authors":["Sudhanshu"],"categories":[],"content":" Link to blog\n","date":1567532388,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1567532388,"objectID":"5e197114a95564e2e23202ee04b4decf","permalink":"https://car3s.github.io/post/sudhanshu/","publishdate":"2019-09-03T23:09:48+05:30","relpermalink":"/post/sudhanshu/","section":"post","summary":"Link to blog","tags":["blog"],"title":"My experience with CARS","type":"post"},{"authors":["CAR3S Group"],"categories":[],"content":" Research grant for 3 years on Memory Hierarchy Optimizations and Virtual Memory Systems from Intel Labs through SRC. Thanks!  ","date":1567420341,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1567420341,"objectID":"01e18785227834d507530cf4226019ce","permalink":"https://car3s.github.io/post/sept_19/","publishdate":"2019-09-02T16:02:21+05:30","relpermalink":"/post/sept_19/","section":"post","summary":" Research grant for 3 years on Memory Hierarchy Optimizations and Virtual Memory Systems from Intel Labs through SRC. Thanks!  ","tags":["Group News"],"title":"September, 2019 update","type":"post"},{"authors":["Biswa"],"categories":[],"content":"","date":1566316530,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1566316530,"objectID":"ed4dc3d039f924a4900d51646ac21008","permalink":"https://car3s.github.io/publication/pact19/","publishdate":"2019-08-20T21:25:30+05:30","relpermalink":"/publication/pact19/","section":"publication","summary":"","tags":[],"title":"Fooling The Sense of Cross-core Last-level Cache Eviction Based Attacker By Prefetching Common Sense","type":"publication"},{"authors":["CAR3S Group"],"categories":[],"content":"  Anish secured an internship offer from JP Morgan \u0026amp; Chase. Nilay got an internship offer from Google Hardware. Many congratulations!  Bhargav and Nilay joined CARS. Welcome!  ","date":1565865141,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1565865141,"objectID":"6c84c4faa5b65e4f7816de742c271635","permalink":"https://car3s.github.io/post/aug_19/","publishdate":"2019-08-15T16:02:21+05:30","relpermalink":"/post/aug_19/","section":"post","summary":"  Anish secured an internship offer from JP Morgan \u0026amp; Chase. Nilay got an internship offer from Google Hardware. Many congratulations!  Bhargav and Nilay joined CARS. Welcome!  ","tags":["Group News"],"title":"August, 2019 update","type":"post"},{"authors":["Dixit","Sujeet","Biswa","Vishal"],"categories":[],"content":"","date":1564818560,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1564818560,"objectID":"61470643d4b5a3e9ad88ebac53eab163","permalink":"https://car3s.github.io/publication/woot19/","publishdate":"2020-04-03T13:19:20+05:30","relpermalink":"/publication/woot19/","section":"publication","summary":"","tags":[],"title":"How Sharp is SHARP?","type":"publication"},{"authors":["Aditya"],"categories":[],"content":" Link to blog\n","date":1562780378,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1562780378,"objectID":"7d7fec75a5b9a36483765713b59d7239","permalink":"https://car3s.github.io/post/aditya_19/","publishdate":"2019-07-10T23:09:38+05:30","relpermalink":"/post/aditya_19/","section":"post","summary":"Link to blog","tags":["blog"],"title":"From Zero to 13 in One Conference","type":"post"},{"authors":["CAR3S Group"],"categories":[],"content":"  Vishal has returned as an M.S. student and joined us again after his stint as an intern. Welcome! Magical days here at CARS!  Secured a spot in the CVP Leaderboard Declared DPC-3 Winner Papers accepted at HASP \u0026lsquo;19@ ISCA, WOOT \u0026lsquo;19@USENIX SECURITY and PACT \u0026lsquo;19.    ","date":1562063541,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1562063541,"objectID":"714dc96e14a5c830f04c582cf6d29101","permalink":"https://car3s.github.io/post/july_19/","publishdate":"2019-07-02T16:02:21+05:30","relpermalink":"/post/july_19/","section":"post","summary":"Vishal has returned as an M.S. student and joined us again after his stint as an intern. Welcome! Magical days here at CARS!  Secured a spot in the CVP Leaderboard Declared DPC-3 Winner Papers accepted at HASP \u0026lsquo;19@ ISCA, WOOT \u0026lsquo;19@USENIX SECURITY and PACT \u0026lsquo;19.","tags":["Group News"],"title":"July, 2019 update","type":"post"},{"authors":["Santhosh Kumar T","Debadatta Mishra","Biswa","Nayan"],"categories":[],"content":"","date":1561292469,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1561292469,"objectID":"b5be7137114b80b27d1dc2c02d84f77b","permalink":"https://car3s.github.io/publication/hasp_isca2019/","publishdate":"2020-04-10T17:51:09+05:30","relpermalink":"/publication/hasp_isca2019/","section":"publication","summary":"","tags":[],"title":"CoWLight: Hardware Assisted Copy-On-Write Fault Handling for Secure Deduplication","type":"publication"},{"authors":["CAR3S Group"],"categories":[],"content":"  Sudhanshu, Unnati, and Chaitanya got grad school offers. Many congrats!  Anish and Bhargav joined CARS. Welcome!  ","date":1558521141,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1558521141,"objectID":"28b18dfa1dbb3bbd6b286f30aaaf214e","permalink":"https://car3s.github.io/post/may_19/","publishdate":"2019-05-22T16:02:21+05:30","relpermalink":"/post/may_19/","section":"post","summary":"  Sudhanshu, Unnati, and Chaitanya got grad school offers. Many congrats!  Anish and Bhargav joined CARS. Welcome!  ","tags":["Group News"],"title":"May, 2019 update","type":"post"},{"authors":["Arpit Gupta","Parv Mor","Hrithvik Taneja","Biswa"],"categories":[],"content":"","date":1554898879,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1554898879,"objectID":"d63af4c59026d6a2e29f04c302cdba4a","permalink":"https://car3s.github.io/publication/cvp_isca20xx/","publishdate":"2020-04-10T17:51:19+05:30","relpermalink":"/publication/cvp_isca20xx/","section":"publication","summary":"","tags":[],"title":"STEVES: Pushing the Limits of Value Predictors with Sliding FCM and EVES","type":"publication"},{"authors":["CAR3S Group"],"categories":[],"content":"  Sujeet, Dixit and Upasana joined CARS. Welcome!  ","date":1546425141,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1546425141,"objectID":"531d9e72954d619c1675055694209478","permalink":"https://car3s.github.io/post/jan_19/","publishdate":"2019-01-02T16:02:21+05:30","relpermalink":"/post/jan_19/","section":"post","summary":"  Sujeet, Dixit and Upasana joined CARS. Welcome!  ","tags":["Group News"],"title":"January, 2019 update","type":"post"},{"authors":["CAR3S Group"],"categories":[],"content":" Research grant for 3 years on Secure Memory Systems from NXP through SRC. Thanks!  ","date":1534933941,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1534933941,"objectID":"8c7e6836275bf8d69fd6b44fc09fcfea","permalink":"https://car3s.github.io/post/aug_18/","publishdate":"2018-08-22T16:02:21+05:30","relpermalink":"/post/aug_18/","section":"post","summary":" Research grant for 3 years on Secure Memory Systems from NXP through SRC. Thanks!  ","tags":["Group News"],"title":"August 2018 update","type":"post"},{"authors":["Nayan"],"categories":[],"content":" Link to blog\n","date":1531417167,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1531417167,"objectID":"35a3a40c035ba194a33b778eb19a8b09","permalink":"https://car3s.github.io/post/nayan_18/","publishdate":"2018-07-12T23:09:27+05:30","relpermalink":"/post/nayan_18/","section":"post","summary":"Link to blog","tags":["blog"],"title":"The ISCA Experience","type":"post"},{"authors":["CAR3S Group"],"categories":[],"content":"  Aurn and Saurabh have joined CARS. Welcome!  ","date":1530527541,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1530527541,"objectID":"9795d70a662cd90822c77447af98cd7c","permalink":"https://car3s.github.io/post/jul_18/","publishdate":"2018-07-02T16:02:21+05:30","relpermalink":"/post/jul_18/","section":"post","summary":"  Aurn and Saurabh have joined CARS. Welcome!  ","tags":["Group News"],"title":"July, 2018 update","type":"post"},{"authors":["Snehil"],"categories":[],"content":" Link to blog\n","date":1530466731,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1530466731,"objectID":"04964c834d4de4c8f402cb144f9dda65","permalink":"https://car3s.github.io/post/snehil_18/","publishdate":"2018-07-01T23:08:51+05:30","relpermalink":"/post/snehil_18/","section":"post","summary":"Link to blog","tags":["blog"],"title":"Snehil Verma – ISCA 2018","type":"post"},{"authors":null,"categories":null,"content":"The research conducted at CAR3S is subject to approval and verification by competent authorities and organizations, and we accept no responsibility or liabilities whatsover for consequences of reproduction and use of our source code.\n","date":1530140400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1530140400,"objectID":"9b10c1f64082d3869fd4cb1f85809430","permalink":"https://car3s.github.io/terms/","publishdate":"2018-06-28T00:00:00+01:00","relpermalink":"/terms/","section":"","summary":"The research conducted at CAR3S is subject to approval and verification by competent authorities and organizations, and we accept no responsibility or liabilities whatsover for consequences of reproduction and use of our source code.","tags":null,"title":"Disclaimer","type":"page"},{"authors":["Nayan","Snehil","Prakhar Agarwal","Biswa","Mainak Chaudhuri"],"categories":[],"content":"","date":1522741937,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1522741937,"objectID":"2b3dff40ec7c2fc7e6a5e320551ff84c","permalink":"https://car3s.github.io/publication/cvp_isca18/","publishdate":"2020-04-03T13:22:17+05:30","relpermalink":"/publication/cvp_isca18/","section":"publication","summary":"","tags":[],"title":"DFCM++: Augmenting DFCM with Early Update and Data Dependence-driven Value Estimation","type":"publication"}]